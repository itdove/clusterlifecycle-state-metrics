# Copyright Contributors to the Open Cluster Management project

language: go

go:
  - "1.15.x"

services:
  - docker

branches:
  only:
    - main
    - /^release-[0-9]+\..*$/

addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: "qU91fkwbwjR4vG211IFeTaVWdeuinJiq035yKZjoiBMZWtB5fj/QEdq3gZtaSyXQLYrfZdZb7UrhAjvhmD6Y8OTaTi42HbR5q2dMSpnGYyokSv30KSFIvyafwoK7xVvqR4KfkKquGW6XYzs0ffh2rIwCnI+dRSYm8wVo/ZlvjzJrwcIYanDvk3AWXiU57A6UgLwHPZBjwrWBOssgQa6U7ZFQwlpl4GgFfxG1jRRSurY5pKygrejV+zLo2qkZoj/RNbukj9LpH7YDs9a+dULUydFs9xP04Obq7QYdPGmiv2ieJfpFQFF5WrFhkUam8GPxrvoPqXS10IB/Xq6fuABiTFPE41Ru+/bhNbPG5/rpXlEBbm1euj6vTQNRMzQtelS352Cm2lViant4Tq4IdcM8xp40KhzOujUMIhIJSSPvVPlDszKRz2UdsFbcU2ITFVAWQBaGf+H4xI9kWYNJDsdmL4y76ObrQ57mYJT7m5ieGck1lsPFtaF3+oG+/wItuS78hX0ISweNyRKkMAMsqou1Zs/DUzKzfrJVXwLcc5kwrk+s1lnYWSxCQ/snprwVNYaXFKrOjbnobMu8HYgLgbIaULnBbp6hmJjq0dJLkS4I1OlkVOtQ4cIONX7WCyhpcHJHDUxlku+RVOlGJ5o/hCGRGBMScdsF5ykXuw7Z2A+gEzs="

stages:
  # - unit-test
  # - build
  # - functional-test
  # - release-ff
  # - publish

before_script:
  # - git config --global url.git@github.com:open-cluster-management/.insteadOf https://github.com/open-cluster-management/
  # - make init

jobs:
  include:
    - stage: unit-test
      name: "Run unit tests"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi; 
        - make sonar/go

    - stage: build
      name: "build image"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - make component/init
        - make check
        - make component/build   # to remove overhead and keep output clean
        - make component/push
        - make security/scans
    
    - stage: build
      name: "build and push coverage image"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - make component/build-coverage
        - make component/push-coverage
      
    # - stage: build
    #   name: "build and push e2e image"
    #   if: type = pull_request
    #   script:
    #   - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
    #   - make component/build-e2e
    #   - make component/push-e2e

    - stage: functional-test
      name: "Run functional-test"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi; 
        - make component/pull
        - make component/test/functional
    
    - stage: release-ff
      name: "Push commits to current release branch"
      if: type = push AND branch =~ /^main$/
      script:
        - make
        - make release-ff

    - stage: publish
      name: "Publish Image"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - make jq/install 
        - make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}
    #   after_script:
    #     - test "$TRAVIS_PULL_REQUEST" = "false" && test "$TRAVIS_TEST_RESULT" = "1" && ./build/slack-notification.sh || echo "Slack notification not sent"
